# spawn curving fireflies from side, one at a time

let maxSecs = 7.5;

let secsBetweenSpawns = 0.30;
let secInc = 1.0 / updatesPerSecond();

let speedLow = 120;
let speedHigh = 180;

# angles for the left spawn; right should flipY
let angleLow = 35.0;
let angleHigh = 45.0;

let spawnYLow = gameHeight() - 20.0;
let spawnYHigh = gameHeight() + 10;

let numSpawnsPerSide = 4;

func spawnLeftFirefly(pos, vel, depthOffset){
    spawn(
        "firefly_right", # left fireflies point right
        pos,
        vel,
        depthOffset,
        "enemy_2_4"
    );
}

func spawnRightFirefly(pos, vel, depthOffset){
    spawn(
        "firefly_left", # right fireflies point left
        pos,
        vel,
        depthOffset,
        "enemy_2_4"
    );
}

let count = 0;
func spawnRandFirefly(depthOffset){
    let speed = random(speedLow, speedHigh);
    let angle = random(angleLow, angleHigh);
    let spawnY = random(spawnYLow, spawnYHigh);
    let pos;
    if(count < numSpawnsPerSide){
        pos = getLeftSpawn(spawnY);
        spawnLeftFirefly(
            pos,
            <<speed, angle>>,
            depthOffset
        );
    }
    else{
        angle = flipY(angle);
        pos = getRightSpawn(spawnY);
        spawnRightFirefly(
            pos,
            <<speed, angle>>,
            depthOffset
        );
    }
    count = count + 1;
    if(count >= (numSpawnsPerSide * 2)){
        count = 0;
    }
}

let numSpawns = 0;
let secsSinceLastSpawn = 0.0;
for(let secs = 0.0;
    secs < maxSecs;
    secs = secs + secInc
){
    if(secsSinceLastSpawn > secsBetweenSpawns){
        secsSinceLastSpawn = secsSinceLastSpawn
            - secsBetweenSpawns;
        spawnRandFirefly(numSpawns);
        numSpawns = numSpawns + 1;
    }
    secsSinceLastSpawn = secsSinceLastSpawn + secInc;
    yield;
}