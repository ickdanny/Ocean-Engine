let yOffset = 8.0;
let shardSpeed = 550.0;
let caltropSpeed = 333.0;

let yOffsetVector = <<yOffset, 90.0>>;

func spawnShard(position, velocity, depthOffset){
    spawn("shard", position, velocity, depthOffset);
}

func spawnSingleShard(posOffset, angle){
    let spawnPos = getPosition() + posOffset
        + yOffsetVector;
    if(isPlayerFocused()){
        spawnShard(
            spawnPos,
            <<shardSpeed, -90.0>>,
            0
        );
    }
    else{
        spawnShard(
            spawnPos,
            <<shardSpeed, angle>>,
            0
        );
    }
}

func spawnShardPair(posOffsetRight, angleRight){
    let position = getPosition();
    let mirrorAxis = position.x;
    let posRight = position + posOffsetRight
        + yOffsetVector;
    let velRight;
    if(isPlayerFocused()){
        velRight = <<shardSpeed, -90.0>>;
    }
    else{
        velRight = <<shardSpeed, angleRight>>;
    }
    mirror(
        posRight, velRight, mirrorAxis, spawnShard
    );
}

func spawnCaltrop(position, velocity, depthOffset){
    spawn(
        "caltrop",
        position,
        velocity,
        depthOffset,
        "caltrop"
    );
}

func spawnSingleCaltrop(posOffset){
    let spawnPos = getPosition() + posOffset
        + yOffsetVector;
    spawnCaltrop(
        spawnPos,
        <<caltropSpeed, -90.0>>,
        0
    );
}

func spawnCaltropPair(posOffsetRight, angleRight){
    let position = getPosition();
    let mirrorAxis = position.x;
    let posRight = position + posOffsetRight
        + yOffsetVector;

    # caltrops unaffected by focus
    let velRight = <<shardSpeed, angleRight>>;
    mirror(
        posRight, velRight, mirrorAxis, spawnCaltrop
    );
}

# bucket func; each lasts 30 ticks

let zeroVec = <<0, 0>>;

func func0(){
    # 5 spawns
    for(let i = 0; i < 5; i = i + 1){
        spawnSingleShard(zeroVec, -90.0);
        tickTimer(6);
    }
}

func func1(){
    # 5 spawns + caltrop
    spawnSingleCaltrop(zeroVec);
    func0();
}

func func2(){
    # 5 pair spawns + caltrop
    spawnSingleCaltrop(zeroVec);
    for(let i = 0; i < 5; i = i + 1){
        spawnShardPair(<<3.5, 0.0>>, -88.0);
        tickTimer(6);
    }
}

func func3(){
    # 5 pair spawns + 2 caltrops
    spawnSingleCaltrop(zeroVec);
    spawnShardPair(<<3.5, 0.0>>, -88.0);
    tickTimer(6);
    spawnSingleCaltrop(zeroVec);
    for(let i = 1; i < 5; i = i + 1){
        spawnShardPair(<<3.5, 0.0>>, -88.0);
        tickTimer(6);
    }
}

func func4(){
    # 5 triple spawns + 2 caltrops
    spawnSingleCaltrop(zeroVec);
    spawnSingleShard(zeroVec, -90.0);
    spawnShardPair(<<4.5, 0.0>>, -87.0);
    tickTimer(6);
    spawnSingleCaltrop(zeroVec);
    for(let i = 1; i < 5; i = i + 1){
        spawnSingleShard(zeroVec, -90.0);
        spawnShardPair(<<4.5, 0.0>>, -87.0);
        tickTimer(6);
    }
}

func func5(){
    # 5 triple spawns + 4 caltrops

    # spawn 1: 1 caltrop
    spawnSingleCaltrop(zeroVec);
    spawnSingleShard(zeroVec, -90.0);
    spawnShardPair(<<4.5, 0.0>>, -87.0);
    tickTimer(6);

    # spawn 2: 2 caltrops 
    spawnCaltropPair(<<3.5, 0.0>>, -84.5);
    spawnSingleShard(zeroVec, -90.0);
    spawnShardPair(<<4.5, 0.0>>, -87.0);
    tickTimer(6);

    # spawn 3+: 1 caltrop
    spawnSingleCaltrop(zeroVec);
    for(let i = 2; i < 5; i = i + 1){
        spawnSingleShard(zeroVec, -90.0);
        spawnShardPair(<<4.5, 0.0>>, -87.0);
        tickTimer(6);
    }
}

func func6(){
    # 5 quad spawns + 6 caltrops

    # spawn 1: 1 caltrop
    spawnSingleCaltrop(zeroVec);
    spawnShardPair(<<3.5, 0.0>>, -89.5);
    spawnShardPair(<<7.5, 0.0>>, -87.0);
    tickTimer(6);

    # spawn 2: 2 caltrops 
    spawnCaltropPair(<<3.5, 0.0>>, -84.5);
    spawnShardPair(<<3.5, 0.0>>, -89.5);
    spawnShardPair(<<7.5, 0.0>>, -87.0);
    tickTimer(6);

    # spawn 3: 1 caltrop
    spawnSingleCaltrop(zeroVec);
    spawnShardPair(<<3.5, 0.0>>, -89.5);
    spawnShardPair(<<7.5, 0.0>>, -87.0);
    tickTimer(6);

    # spawn 4: 2 caltrops
    spawnCaltropPair(<<3.5, 0.0>>, -84.5);
    spawnShardPair(<<3.5, 0.0>>, -89.5);
    spawnShardPair(<<7.5, 0.0>>, -87.0);
    tickTimer(6);

    # spawn 5: only shards
    spawnShardPair(<<3.5, 0.0>>, -89.5);
    spawnShardPair(<<7.5, 0.0>>, -87.0);
    tickTimer(6);
}

playerPowerSplit(
    func0,
    func1,
    func2,
    func3,
    func4,
    func5,
    func6
);