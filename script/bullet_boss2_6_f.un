# wobbly ring C

let midSpeed = 50.0;
let midSpeedTicks = 40;

let slowTicks = 40;
let waitSecs = 0.7;

let finalSpeed = 24.0;
let speedTicks = 55;

let distAngleCalcMulti = 0.02;
let xAngleCalcMulti = 0.01;
let yAngleCalcMulti = 0.01;

shiftSpeedPeriod(midSpeed, midSpeedTicks);

shiftSpeedPeriod(0, slowTicks);
secTimer(waitSecs);

func calculateAngle(){
    let dist
        = pointDist(getPosition(), getPlayerPos());
    let multi = sin(dist * distAngleCalcMulti)
        + sin(getX() * xAngleCalcMulti)
        + cos(getY() * yAngleCalcMulti);
    return normalizeAngle(360.0 * multi);
}

shiftVelocityPeriod(
    finalSpeed,
    calculateAngle(),
    speedTicks
);