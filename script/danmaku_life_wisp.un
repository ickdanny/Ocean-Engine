# danmaku pattern for the life wisp until death
# counter spirals of 4-rings

let symmetry = 4;
let speed = 55.0;
let initAngle = 45.0 / 4.0;
let angleVel = diff(9, 7, 5) * phi();
let secsBetweenSpawns = diff(0.45, 0.35, 0.25);

func spawnBulletA(vel, depthOffset){
    spawn(
        "medium_lblue",
        getPosition(),
        vel,
        depthOffset
    );
}

func spawnBulletB(vel, depthOffset){
    spawn(
        "medium_blue",
        getPosition(),
        vel,
        depthOffset
    );
}

let velA = <<speed, initAngle>>;
let velB = <<speed, flipX(initAngle)>>;
angleVel = abs(angleVel); # make angle vel positive
while(true){
    ring(velA, symmetry, spawnBulletA);
    ring(velB, symmetry, spawnBulletB);

    velA.t = velA.t + angleVel;
    velB.t = velB.t - angleVel;

    velA.t = normalizeAngle(velA.t);
    secTimer(secsBetweenSpawns);
}