# automaton spiral direction A

let maxSecs = _danmaku_enemy_3_8_maxSecs();
let secsBetweenShots
    = _danmaku_enemy_3_8_secsBetweenShots();
let symmetry = _danmaku_enemy_3_8_symmetry();
let colCount = _danmaku_enemy_3_8_colCount();
let colInc = _danmaku_enemy_3_8_colInc();
let baseSpeed = _danmaku_enemy_3_8_baseSpeed();
let angleVel = _danmaku_enemy_3_8_angleVel();

let pos = getPosition();
func spawnBullet(vel, depthOffset){
    spawn(
        "sharp_lblue",
        pos,
        vel,
        depthOffset
    );
}

func spawnColumn(baseVel, unused){
    column(
        baseVel,
        colCount,
        colInc,
        spawnBullet
    );
}
let secs = 0.0;
let secsSinceLastShot = 0.0;
let secInc = 1.0 / updatesPerSecond();
let currentAngle = getAngleToPlayer();
while(secs < maxSecs){
    if(secsSinceLastShot > secsBetweenShots){
        secsSinceLastShot = secsSinceLastShot
            - secsBetweenShots;
        ring(
            <<baseSpeed, currentAngle>>,
            symmetry,
            spawnColumn
        );
        currentAngle = currentAngle + angleVel;
    }
    secs = secs + secInc;
    secsSinceLastShot = secsSinceLastShot + secInc;
    yield;
}
